# Set the version
version: "1.0.0.0-{build}"

# Set the image of the container/VM
image: Visual Studio 2017

# Set the different types of architectures we will build for
platform: Any CPU

# Limit the maximum amount of concurrent jobs
max_jobs: 4

# Set the different types of configurations we will build for
configuration:
  - Release
  - Debug
  - RelWithDebInfo
  - MinSizeRel

# Allow the project to fail if one configuration type fails
matrix:
  fast_finish: true

# Fetch repository as a ZIP archive downloading only the latest version
shallow_clone: true
clone_depth: 1

# Configure the project before building it
before_build:
  - cmd: |-
      cmake --version
      mkdir build
      cd build
      cmake .. -G "Visual Studio 15 2017 Win64"

# Build the project using the generated SLN file
build_script:
  - cmake --build . --config %CONFIGURATION% -- %MSBUILD_ARGS%
  - cpack --config CPackConfig.cmake
  - cpack --config CPackSourceConfig.cmake
  - ps: $env:PROJECT_VERSION = (Get-Content $env:APPVEYOR_BUILD_FOLDER\CMakeLists.txt | Select-String -CaseSensitive VERSION)[1].ToString().Trim() -Replace '.*VERSION +(\d+(\.\d+){1,3})', '$1'

# Package the project before deployment
#before_deploy:
#  - cpack --config CPackConfig.cmake
#  - cpack --config CPackSourceConfig.cmake
#  - ps: $env:PROJECT_VERSION = (Get-Content $env:APPVEYOR_BUILD_FOLDER\CMakeLists.txt | Select-String -CaseSensitive VERSION)[1].ToString().Trim() -Replace '.*VERSION +(\d+(\.\d+){1,3})', '$1'

# Configure the artifacts
artifacts:
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.tar.bz2
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.tar.bz2"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.tar.gz
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.tar.gz"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.tar.Z
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.tar.Z"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.zip
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.zip"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.sh
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.sh"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.7z
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.7z"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.tar.xz
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.tar.xz"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.exe
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.exe"
  - path: build/%APPVEYOR_PROJECT_NAME%-*-win32.msi
    name: "%APPVEYOR_PROJECT_NAME%-%PROJECT_VERSION%-win32.msi"
  - path: build/%APPVEYOR_PROJECT_NAME%.tar.bz2
    name: "%APPVEYOR_PROJECT_NAME%.tar.bz2"
  - path: build/%APPVEYOR_PROJECT_NAME%.tar.gz
    name: "%APPVEYOR_PROJECT_NAME%.tar.gz"
  - path: build/%APPVEYOR_PROJECT_NAME%.tar.Z
    name: "%APPVEYOR_PROJECT_NAME%.tar.Z"
  - path: build/%APPVEYOR_PROJECT_NAME%.zip
    name: "%APPVEYOR_PROJECT_NAME%.zip"
  - path: build/%APPVEYOR_PROJECT_NAME%.sh
    name: "%APPVEYOR_PROJECT_NAME%.sh"
  - path: build/%APPVEYOR_PROJECT_NAME%.7z
    name: "%APPVEYOR_PROJECT_NAME%.7z"
  - path: build/%APPVEYOR_PROJECT_NAME%.tar.xz
    name: "%APPVEYOR_PROJECT_NAME%.tar.xz"

# Deploy to GitHub Releases
deploy:
  - provider: GitHub
    auth_token:
      secure: r98gmXU6ZKjuf9/4yGdVTzFjJU2JSkMCd+VhTJzKh0bFxKkuJUYB5R8qvxeIfTBS
    release: "Release %APPVEYOR_REPO_TAG_NAME%"
    description: "Automatic release made by AppVeyor"
    artifact: /%APPVEYOR_PROJECT_NAME%(-[0-9]+(\.[0-9]+)*-win32)?\.(7z|msi|exe|sh|zip|tar\.(bz2|gz|xz|Z))/
    draft: false
    prerelease: false
    on:
      branch: master
      APPVEYOR_REPO_TAG: true
  - provider: GitHub
    auth_token:
      secure: r98gmXU6ZKjuf9/4yGdVTzFjJU2JSkMCd+VhTJzKh0bFxKkuJUYB5R8qvxeIfTBS
    release: "Release v%PROJECT_VERSION%"
    description: "Automatic release made by AppVeyor"
    artifact: /%APPVEYOR_PROJECT_NAME%(-[0-9]+(\.[0-9]+)*-win32)?\.(7z|msi|exe|sh|zip|tar\.(bz2|gz|xz|Z))/
    draft: false
    prerelease: true
    on:
      branch: /release\/.*/
